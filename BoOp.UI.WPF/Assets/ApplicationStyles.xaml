<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewmodels="clr-namespace:BoOp.UI.WPF.ViewModels"
                    xmlns:views="clr-namespace:BoOp.UI.WPF.Views">

    <SolidColorBrush x:Key="Primary" Color="#82D5EF"/>
    <SolidColorBrush x:Key="Secondary" Color="#70C6E1"/>
    <SolidColorBrush x:Key="DropShadow" Color="#ccc"/>
    <SolidColorBrush x:Key="Available" Color="#4ADB72"/>
    <SolidColorBrush x:Key="Unavailable" Color="#EA3E3E"/>
    <SolidColorBrush x:Key="MouseOverColor" Color="#eee"/>

    <Style x:Key="LeftScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="1" BorderThickness="0,1,1,1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="15,0,0,0" />
    </Style>

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource Primary}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Primary}"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="TextBlock.Foreground" Value="Chocolate"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
        <Border Background="{TemplateBinding Background}"
                    CornerRadius="10"
                    BorderThickness="0, 0, 0, 2"
                    BorderBrush="{StaticResource DropShadow}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#eee" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="IconButtonTemplate" TargetType="Button">
        <Border Background="{TemplateBinding Background}"
                    CornerRadius="10"
                    BorderThickness="0"
                    BorderBrush="#000">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#eee" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#FFF" />
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontFamily" Value="Nirmala UI" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Height" Value="55" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Width" Value="140" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
    </Style>

    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource IconButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{StaticResource Secondary}"
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="0" CornerRadius="10">
            <ScrollViewer x:Name="PART_ContentHost" Visibility="Visible" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100" />
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LoginTextBoxControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{StaticResource Primary}"
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="0" CornerRadius="10">
            <ScrollViewer x:Name="PART_ContentHost" Visibility="Visible" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100" />
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PasswordBoxControlTemplate" TargetType="{x:Type PasswordBox}">
        <Border Background="{StaticResource Primary}"
                x:Name="Bd" BorderBrush="Black"
                BorderThickness="0" CornerRadius="10">
            <ScrollViewer x:Name="PART_ContentHost" Visibility="Visible" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100" />
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SearchIconTextBoxTemplate" TargetType="TextBoxBase">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="240" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="Height" Value="45" />
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template" Value="{StaticResource TextBoxControlTemplate}" />
    </Style>

    <Style x:Key="LoginTextBoxTemplate" TargetType="TextBoxBase">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="240" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="Height" Value="45" />
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template" Value="{StaticResource LoginTextBoxControlTemplate}" />
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="240" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="Height" Value="45" />
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template" Value="{StaticResource PasswordBoxControlTemplate}" />
    </Style>

    <!--ToDo: Find a way to bind width to Grid Width-->
    <Style x:Key="AddBookTextBoxStyle" TargetType="TextBoxBase">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="600" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="Height" Value="45" />
        <Setter Property="MinHeight" Value="45" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template" Value="{StaticResource LoginTextBoxControlTemplate}" />
    </Style>

    <ControlTemplate x:Key="SortButtonTemplate" TargetType="Button">
        <Button Style="{StaticResource IconButton}">
            <Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Background="Transparent" Text="{TemplateBinding Content}" HorizontalAlignment="Left" Margin="0, 0, 6, 0" />
                <Image Grid.Column="1" Source="{StaticResource SortIcon}" Width="16" Height="16" HorizontalAlignment="Right" />
            </Grid>
        </Button>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#70C6E1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="SortButton" TargetType="Button">
        <Setter Property="Height" Value="26" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="Nirmala UI" />
        <Setter Property="FontWeight" Value="ExtraLight" />
    </Style>

    <Style x:Key="BooklistBookStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="LabelBookStyle" TargetType="Label">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>


    <Style x:Key="BookDetailsStyle" TargetType="views:BookDetailsView">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowBookDetailsView, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowBookDetailsView, UpdateSourceTrigger=PropertyChanged}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShowUserDetailsStyle" TargetType="views:ShowUserView">
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowUserDetailsView, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ShowUserDetailsView, UpdateSourceTrigger=PropertyChanged}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>